<%- contentFor('HeaderCss') %> <%- include ('../partials/title-meta',
{"title":"Accounts"}) %>
<!-- DataTables -->
<link
  href="/assets/libs/datatables.net-bs4/css/dataTables.bootstrap4.min.css"
  rel="stylesheet"
  type="text/css"
/>

<!-- Responsive datatable examples -->
<link
  href="/assets/libs/datatables.net-responsive-bs4/css/responsive.bootstrap4.min.css"
  rel="stylesheet"
  type="text/css"
/>
<link
  href="/assets/libs/select2/css/select2.min.css"
  rel="stylesheet"
  type="text/css"
/>
<style>
  .select2-container--default .select2-dropdown {
    z-index: 9999 !important; /* Ensure dropdown is above modal */
  }

  .select2-container--default .select2-selection--single {
    height: auto !important;
  }
  .btn-action {
    margin-right: 5px;
  }
  @media (max-width: 768px) {
    .header-actions {
      margin-top: 10px;
      width: 100%;
    }
    .header-actions .btn {
      margin-bottom: 5px;
    }
  }
</style>
<%- contentFor('body') %> <%- include ('../partials/page-title', {"pagetitle":
"Accounts Table" , "title" : "Accounts Table" }) %>

<div class="row">
  <div class="col-12">
    <div class="card">
      <div class="row align-items-center mb-4 card-title mt-2">
        <div class="col-md-6">
          <h4 class="card-title">Accounts</h4>
        </div>
        <div class="col-md-6">
          <div class="d-flex flex-wrap justify-content-md-end header-actions">
            <button class="btn btn-outline-success btn-action" id="addfavt">
              <i class="bi bi-star"></i> Add to Favorites
            </button>
            <button class="btn btn-outline-primary btn-action" id="openModal">
              <i class="bi bi-plus-circle"></i> Add New Account
            </button>
            <button class="btn btn-outline-info btn-action" id="openSubModal">
              <i class="bi bi-plus-circle"></i> Add New Sub-Account
            </button>
          </div>
        </div>
      </div>
      <div class="card-body">
        <table
          id="accountsTable"
          class="table table-bordered dt-responsive nowrap w-100"
        >
          <thead>
            <tr>
              <th style="width: 20px">
                <div class="form-check font-size-16 align-middle">
                  <input
                    class="form-check-input"
                    type="checkbox"
                    id="selectAllCheckbox"
                  />
                  <label
                    class="form-check-label"
                    for="selectAllCheckbox"
                  ></label>
                </div>
              </th>
              <th>ID</th>
              <th>Title</th>
              <th>Balance</th>
              <th>Notes</th>
              <th>Actions</th>
            </tr>
          </thead>

          <tbody></tbody>
          <tfoot>
            <tr>
              <th></th>
              <th></th>
              <th>Total Balance</th>
              <th id="totalBalance">0</th>
              <th></th>
              <th></th>
            </tr>
          </tfoot>
        </table>
      </div>
    </div>
  </div>
  <!-- end col -->
</div>
<!-- end row -->
<!-- Start Model -->
<div
  class="modal fade"
  id="userModal"
  tabindex="-1"
  aria-labelledby="exampleModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="row px-2 mt-1">
        <div class="col-md-4">
          <span>A/C ID: <%- account_pk %></span>
        </div>
        <div class="col-md-7">
          <h3>ADD Account</h3>
        </div>
        <div class="col-md-1">
          <button
            type="button"
            class="btn-close"
            data-bs-dismiss="modal"
            aria-label="Close"
          ></button>
        </div>
      </div>
      <div class="modal-body">
        <form id="modalForm">
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <input type="hidden" id="userId" name="userId" />
                <label for="username" class="col-form-label">Title:</label>
                <input
                  type="text"
                  class="form-control"
                  id="username"
                  required
                />
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label for="notes" class="col-form-label">Notes:</label>
                <input type="text" class="form-control" id="notes" />
              </div>
            </div>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button
          type="button"
          class="btn btn-secondary"
          id="closeModalButton"
          data-bs-dismiss="modal"
        >
          Close
        </button>
        <button type="submit" class="btn btn-primary" form="modalForm">
          Submit
        </button>
      </div>
    </div>
  </div>
</div>
<!-- End Modal -->

<!-- Start Sub Account Model -->
<div
  class="modal fade"
  id="subAccountModal"
  tabindex="-1"
  aria-labelledby="exampleModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="row px-2 mt-1">
        <div class="col-md-4">
          <span>S. A/C: <%- sub_account_pk %></span>
        </div>
        <div class="col-md-7">
          <strong>Add New Sub-Account</strong>
        </div>
        <div class="col-md-1">
          <button
            type="button"
            class="btn-close"
            data-bs-dismiss="modal"
            aria-label="Close"
          ></button>
        </div>
      </div>
      <div class="modal-body">
        <form id="subAccountmodalForm">
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label for="account_username" class="col-form-label"
                  >Title:</label
                >
                <input
                  type="text"
                  class="form-control"
                  id="account_username"
                  name="account_username"
                  required
                />
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label for="notes" class="col-form-label">Website:</label>
                <select
                  class="form-control select2 account_types"
                  style="width: 100%"
                  id="account_type_id"
                  name="account_type_id"
                >
                  <option value="" selected disabled>--Select--</option>
                </select>
              </div>
            </div>
          </div>
          <div class="row">
            <div class="col-md-6 mt-2">
              <div class="mb-3">
                <label class="form-label">Parent Account</label>
                <select
                  class="form-control select2 parentAccounts"
                  style="width: 100%"
                  id="user_id"
                  name="user_id"
                >
                  <option value="" selected disabled>--Select--</option>
                </select>
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label for="notes" class="col-form-label">Notes:</label>
                <input
                  type="text"
                  class="form-control"
                  id="sub_notes"
                  name="sub_notes"
                />
              </div>
            </div>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button
          type="button"
          class="btn btn-secondary"
          id="closeModalButton"
          data-bs-dismiss="modal"
        >
          Close
        </button>
        <button
          type="submit"
          class="btn btn-primary"
          form="subAccountmodalForm"
        >
          Submit
        </button>
      </div>
    </div>
  </div>
</div>
<!-- End Sub Account Model -->

<%- contentFor('FooterJs') %>
<!-- Required datatable js -->
<script src="/assets/libs/datatables.net/js/jquery.dataTables.min.js"></script>
<script src="/assets/libs/datatables.net-bs4/js/dataTables.bootstrap4.min.js"></script>

<!-- Responsive examples -->
<script src="/assets/libs/datatables.net-responsive/js/dataTables.responsive.min.js"></script>
<script src="/assets/libs/datatables.net-responsive-bs4/js/responsive.bootstrap4.min.js"></script>

<!-- Datatable init js -->
<script src="/assets/js/pages/datatables.init.js"></script>
<!-- Select 2 -->
<script src="/assets/libs/select2/js/select2.min.js"></script>
<script>
  $(document).ready(function () {
    // Initialize DataTable
    const dataTable = $("#accountsTable").DataTable({
      pageLength: 500,
      lengthMenu: [
        [500, 200, 100, -1],
        [500, 200, 100, "All"],
      ],
      paging: true,
      searching: true,
      // ordering: true,
      autoWidth: false,
    });

    // Function to extract companyId from URL
    function getCompanyIdFromUrl() {
      return window.location.pathname.split("/")[2]; // Assuming URL format is /companies/:id
    }

    // Function to fetch users and update the DataTable
    function fetchUsersTable() {
      const companyId = getCompanyIdFromUrl();
      $.ajax({
        type: "GET",
        url: `/companies/${companyId}/users/ajax?user_type=User`,
        success: function (response) {
          dataTable.clear();
          let totalBalance = 0;
          response.users.forEach(function (user) {
            let balance = user.balance === null ? 0 : user.balance; // Handle null balance
            balance = parseFloat(balance).toFixed(balance % 1 === 0 ? 0 : 2);
            const balanceClass =
              balance === 0 ? "" : balance < 0 ? "danger" : "success"; // No class for 0 balance
            dataTable.row.add([
              `<input type="checkbox" class="fav-checkbox" data-id="${user.id}" />`,
              user.account_pk,
              user.username,
              `<span class="badge bg-${balanceClass} fs-6">
               ${Math.round(balance).toLocaleString()}
               </span>`,
              user.notes,
              // Actions column with eye and pencil icons
              `<button class="btn btn-sm btn-info view-btn" data-id="${user.id}" title="View">
                 <i class="fa fa-eye"></i>
                </button>
                <button class="btn btn-sm btn-warning edit-btn" data-id="${user.id}" title="Edit">
                 <i class="fas fa-pencil-alt"></i>
                </button>`,
            ]);
            // Add the balance to totalBalance
            totalBalance += parseFloat(balance);
          });
          // Update the total balance in the footer
          // Update the total balance in the footer with rounded and formatted value
          $("#totalBalance").text(Math.round(totalBalance).toLocaleString());
          dataTable.draw();
        },
        error: function (error) {
          console.log(error);
        },
      });
    }

    // Function to fetch account types based on companyId
    function fetchAccounttype() {
      const companyId = getCompanyIdFromUrl();
      $.ajax({
        type: "GET",
        url: `/companies/${companyId}/account_types/ajax`,
        success: function (response) {
          const accountTypes = response.accountTypes;
          $(".account_types")
            .empty()
            .append('<option value="" selected disabled>--Select--</option>');

          accountTypes.forEach(function (accountType) {
            const option = `<option value="${accountType.id}">${accountType.name}</option>`;
            $(".account_types").append(option);
          });

          $(".select2").select2(); // Re-initialize select2 after appending options
        },
        error: function (error) {
          console.log(error);
        },
      });
    }

    function fetchParentAccount() {
      const companyId = getCompanyIdFromUrl();
      $.ajax({
        type: "GET",
        url: `/companies/${companyId}/users/ajax?user_type=User`,
        success: function (response) {
          const users = response.users;
          $(".parentAccounts")
            .empty()
            .append('<option value="" selected disabled>--Select--</option>');

          users.forEach(function (user) {
            const option = `<option value="${user.id}">${user?.username}</option>`;
            $(".parentAccounts").append(option);
          });

          $(".select2").select2(); // Re-initialize select2 after appending options
        },
        error: function (error) {
          console.log(error);
        },
      });
    }

    $(document).on("click", ".view-btn", function () {
      const userId = $(this).data("id");
      // Perform view action, for example, redirect to a view page
      window.location.href = `/companies/${getCompanyIdFromUrl()}/accounts/${userId}`;
    });

    // Modal logic
    const modal = new bootstrap.Modal(document.getElementById("userModal"), {
      keyboard: false,
    });

    $(document).on("click", ".edit-btn", function () {
      const userId = $(this).data("id");
      // Set hidden input value
      $("#userId").val(userId);
      modal.show();
      // Change modal title to "Edit Account"
      $("#userModal .modal-dialog .modal-content h3").text("Edit Account");

      // Hide the title field
      // Hide the title field and remove required attribute
      const usernameInput = $("#username");
      usernameInput.closest(".col-md-6").hide();
      usernameInput.removeAttr("required");
    });

    // Select/Deselect all checkboxes when the header checkbox is clicked
    $("#selectAllCheckbox").change(function () {
      const isChecked = $(this).prop("checked");
      $(".fav-checkbox").prop("checked", isChecked); // Check/uncheck all checkboxes
    });

    // Listen for the "Add to Favt" button click
    $("#addfavt").click(function () {
      const selectedAccounts = [];

      // Get all checked checkboxes
      $(".fav-checkbox:checked").each(function () {
        selectedAccounts.push($(this).data("id"));
      });

      // If no account is selected, show an alert
      if (selectedAccounts.length === 0) {
        toastr.error(
          "Please select at least one account to add to favorites",
          "Error"
        );
        return;
      }

      // Make the API call to add selected accounts to favorites
      const companyId = getCompanyIdFromUrl();
      $.ajax({
        type: "POST",
        url: `/companies/${companyId}/add_to_favt`, // Update the URL as needed
        data: {
          accounts: selectedAccounts, // Send the array of selected account IDs
        },
        success: function (response) {
          toastr.success(response.message, "Success");
          // Optionally, refresh the DataTable or update the UI accordingly
          fetchUsersTable(); // Reload the table to reflect any changes
        },
        error: function (error) {
          console.log(error);
          alert("Error adding accounts to favorites. Please try again.");
        },
      });
    });

    const subAccountModal = new bootstrap.Modal(
      document.getElementById("subAccountModal"),
      { keyboard: false }
    );

    // Open the modal when the "Add+" button is clicked
    $("#openModal").click(function () {
      modal.show();
    });

    // Open the sub-account modal
    $("#openSubModal").click(function () {
      subAccountModal.show();
      $(".select2").select2({
        minimumResultsForSearch: 0,
        dropdownParent: $("#subAccountModal"),
      });
    });

    // Close modal when "close" button (X) is clicked
    $("#closeModalButton").click(function () {
      modal.hide();
    });

    // Close modal if clicked outside
    $(window).click(function (event) {
      if ($(event.target).is(modal._element)) {
        modal.hide();
      }
    });

    // Handle form submission inside the modal (User Form)
    $("#modalForm").submit(function (event) {
      event.preventDefault();

      const username = $("#username").val();
      const notes = $("#notes").val();
      const user_type = "User";
      const companyId = getCompanyIdFromUrl();
      const userId = $("#userId").val(); // Get hidden value

      $.ajax({
        type: "POST",
        url: `/companies/${companyId}/users`,
        data: {
          userId: userId, // Get hidden value
          company_id: companyId,
          username: username,
          user_type: user_type,
          notes: notes,
        },
        success: function (response) {
          fetchUsersTable(); // Update the users table after adding a new user
          modal.hide();
          $("#modalForm")[0].reset(); // Reset the form
          $("#userId").val(""); // Clear hidden userId

          // ✅ Show the username field again
          const usernameField = $("#username").closest(".col-md-6");
          usernameField.show();
          $("#username").attr("required", true);

          // ✅ Reset the modal title
          $("#userModal .modal-dialog .modal-content h3").text("ADD Account");
        },
        error: function (error) {
          alert("Error submitting the user. Please try again.");
        },
      });
    });

    // Handle sub-account form submission
    $("#subAccountmodalForm").submit(function (event) {
      event.preventDefault();

      const account_username = $("#account_username").val();
      const user_id = $("#user_id").val();
      const account_type_id = $("#account_type_id").val();
      const notes = $("#sub_notes").val();
      const companyId = getCompanyIdFromUrl();

      $.ajax({
        type: "POST",
        url: `/companies/${companyId}/sub_accounts`, // Correct endpoint for subaccounts
        data: {
          company_id: companyId,
          account_username: account_username,
          user_id: user_id,
          account_type_id: account_type_id,
          notes: notes,
        },
        success: function (response) {
          fetchUsersTable(); // Update the users table after adding a new sub-account
          subAccountModal.hide();
          $("#subAccountmodalForm")[0].reset(); // Reset the sub-account form
        },
        error: function (error) {
          alert("Error submitting the sub-account. Please try again.");
        },
      });
    });

    // If company_id exists in localStorage, display the relevant links in the sidebar
    const storedCompanyId = localStorage.getItem("company_id");
    if (storedCompanyId) {
      showSidebarLinks(storedCompanyId);
    }

    // Fetch and display the users table and account types
    fetchUsersTable();
    fetchAccounttype();
    fetchParentAccount();
  });
</script>
